apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "messaging.fullname" . }}
  labels:
    app: {{ template "messaging.fullname" . }}
    app.kubernetes.io/name: origin
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: origin-messaging
spec:
  selector:
    matchLabels:
      app: {{ template "messaging.fullname" . }}
  serviceName: {{ template "messaging.fullname" . }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "messaging.fullname" . }}
    spec:
      containers:
      - name: origin-messaging
        image: "{{ .Values.containerRegistry }}/{{ .Release.Namespace }}/{{ .Values.messagingImage }}:{{ .Values.messagingImageTag }}"
        imagePullPolicy: Always
        env:
          - name: ENVKEY
            valueFrom:
              secretKeyRef:
                name: {{ template "messaging.fullname" . }}
                key: ENVKEY
        port:
          - name: websocket
            containerPort: 9012
        volumeMounts:
          - mountPath: /data/ipfs
            name: {{ template "messaging.fullname" . }}-data
        resources:
          requests:
            memory: 1Gi
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
                  "-instances={{ .Values.databaseInstance }}=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
  volumeClaimTemplates:
  - metadata:
      name: {{ template "messaging.fullname" . }}-data
      labels:
        app: {{ template "messaging.fullname" . }}
    spec:
      accessModes:
        - ReadWriteOnce  # Read-write for a single node only
      storageClassName: "standard"
      resources:
        requests:
          storage: {{ default "8Gi" .Values.messagingIpfsStorageRequestSize }}
